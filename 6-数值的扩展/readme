关键词：

ES6提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示
如果要将0b和0o前缀的字符串数值转为十进制，要使用Number方法。
ES6在Number对象上，新提供了Number.isFinite()和Number.isNaN()两个方法。
ES6将全局方法parseInt()和parseFloat()，移植到Number对象上面，行为完全保持不变。
Number.isInteger()用来判断一个值是否为整数
ES6在Number对象上面，新增一个极小的常量Number.EPSILON。

JavaScript能够准确表示的整数范围在-2^53到2^53之间（不含两个端点）Number.isSafeInteger()则是判断一个整数是否在这个范围内。
-2^53和2^53是Number.MIN_SAFE_INTEGER和Number.MAX_SAFE_INTEGER


Math扩展
Math.trunc方法用于去除一个数的小数部分，返回整数部分。
Math.sign方法用来判断一个数到底是正数、负数、还是零。
Math.cbrt方法用于计算一个数的立方根。
JavaScript的整数使用32位二进制形式表示，Math.clz32方法返回一个数的32位无符号整数形式有多少个前导0。
Math.imul方法返回两个数以32位带符号整数形式相乘的结果   他比a*b精确
Math.hypot方法返回所有参数的平方和的平方根。
后面的就是对数方法了，极少用，用的时候再查api